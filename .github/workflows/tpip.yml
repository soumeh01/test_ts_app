name: TPIP

on:
  workflow_call:
    inputs:
      node-version-file:
        description: 'package.json file'
        required: true
        type: string
        default: './package.json'
      package-manager:
        description: 'Package manager to use (npm or yarn)'
        required: false
        type: string
        default: 'npm'
      tpip-header-file:
        type: string
        required: true
        description: Path to the TPIP header file.
      tpip-json-file:
        type: string
        required: true
        description: Path to the TPIP JSON file.
      tpip-report-file:
        type: string
        required: false
        description: Path to the generated TPIP report file.
        default: 'TPIP.md'

env:
  CALLER_DIR: 'caller-repository'
  WORKFLOW_DIR: 'test_ts_app'

jobs:
  update-report:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}
          path: ${{ env.CALLER_DIR }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: soumeh01/test_ts_app
          path: ${{ env.WORKFLOW_DIR }}

      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version-file: ${{ env.CALLER_DIR }}/${{ inputs.node-version-file }}
          registry-url: https://npm.pkg.github.com
          package-manager-cache: false
          always-auth: true

      - name: Install dependencies
        working-directory: ${{ env.CALLER_DIR }}
        run: |
          if [ "${{ inputs.package-manager }}" = "npm" ]; then
            npm ci
          else
            yarn --frozen-lockfile --prefer-offline --ignore-scripts
          fi

      - name: Update TPIP
        id: excerpt
        run: |
          ${{ inputs.package-manager }} run tpip:update
          if git diff --exit-code docs/third-party-licenses.json > /dev/null; then
            echo "update=0" >> $GITHUB_OUTPUT
          else
            echo "update=1" >> $GITHUB_OUTPUT
          fi

      - name: Debug log
        run: |
          echo "TPIP update needed: ${{ steps.excerpt.outputs.update }}"
          ls -l

      - name: Generate third-party licenses report
        if: ${{ steps.excerpt.outputs.update == 1 }}
        run: |
          cd ./${{ env.WORKFLOW_DIR }}
          npx tsx ./scripts/tpip-reporter.ts \
            --header ../${{ env.CALLER_DIR }}/${{ inputs.tpip-header-file }} \
            ../${{ env.CALLER_DIR }}/${{ inputs.tpip-json-file }} \
            ../${{ env.CALLER_DIR }}/${{ inputs.tpip-report-file }}

      - name: Upload third-party licenses report
        if: success()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: TPIP-report
          path: ./${{ env.CALLER_DIR }}/${{ inputs.tpip-report-file }}
          retention-days: 1

      - name: Commit Changes
        if: ${{ steps.excerpt.outputs.update == 1 }}
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GRASCI_WORKFLOW_UPDATE }}
          commit-message: Update TPIP report
          title: ':robot: [TPIP] Update TPIP report'
          body: |
            Third-party IP report updates
            **Automated Changes:**
            - updated third party json file
            - Regenerated TPIP report
          branch: update-tpip
          delete-branch: true
          labels: TPIP
          draft: true
